// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"absence/internal/handler"
	"absence/internal/middleware"
	"absence/internal/repository"
	"absence/internal/service"
	"absence/pkg/database"
	"absence/pkg/jwt"
	"gorm.io/gorm"
)

// Injectors from wire.go:

// InitializeAPI initializes all components of the API
func InitializeAPI(db *gorm.DB, jwtManager *jwt.JWTManager) (*API, error) {
	userRepository := repository.NewUserRepository(db)
	userService := service.NewUserService(userRepository)
	userHandler := handler.NewUserHandler(userService, jwtManager)
	authMiddleware := middleware.NewAuthMiddleware(jwtManager)
	api := &API{
		UserHandler:    userHandler,
		AuthMiddleware: authMiddleware,
	}
	return api, nil
}

// wire.go:

// InitializeDB initializes the database connection
func InitializeDB(config *database.Config) (*gorm.DB, error) {
	return database.NewDatabase(config)
}

type API struct {
	UserHandler    *handler.UserHandler
	AuthMiddleware *middleware.AuthMiddleware
}
