// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"absence/internal/handler"
	"absence/internal/repository"
	"absence/internal/service"
	"absence/pkg/database"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeAPI(db *gorm.DB) (*API, error) {
	userRepository := repository.NewUserRepository(db)
	userService := service.NewUserService(userRepository)
	userHandler := handler.NewUserHandler(userService)
	attendanceRepository := repository.NewAttendanceRepository(db)
	attendanceService := service.NewAttendanceService(attendanceRepository)
	attendanceHandler := handler.NewAttendanceHandler(attendanceService)
	api := &API{
		UserHandler:       userHandler,
		AttendanceHandler: attendanceHandler,
	}
	return api, nil
}

// wire.go:

// ProviderSet is a provider set for wire
var ProviderSet = wire.NewSet(repository.NewUserRepository, repository.NewAttendanceRepository, service.NewUserService, service.NewAttendanceService, handler.NewUserHandler, handler.NewAttendanceHandler)

type API struct {
	UserHandler       *handler.UserHandler
	AttendanceHandler *handler.AttendanceHandler
}

func InitializeDB(config *database.Config) (*gorm.DB, error) {
	return database.NewDatabase(config)
}
